# -*- coding: utf-8 -*-
"""Perceptron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y3TbZYUJwfY01QTyTQhG-MO7Xr4qfeO3

Perceptron 1
"""

# Importando biblioteca
from sklearn.linear_model import Perceptron

# Dados de entrada
X = [[0, 0], [0, 1], [1, 0], [1, 1]]

# Saídas desejadas
Y = [0, 1, 1, 1]

# Criando e treinando o perceptron
modelo = Perceptron()
modelo.fit(X, Y)

# Testando o modelo
print("Previsões:")
testes = [[0,0], [0,1], [1,0], [1,1]]
for teste in testes:
  previsao = modelo.predict([teste])
  print(f"Nuvens: {teste[0]}, Previsão Chuva: {teste[1]} => Levar Guarda-chuva? {'Sim' if previsao[0] == 1 else 'Não'}")

"""Perceptron 2"""

# Importando a biblioteca
from sklearn.linear_model import Perceptron

# Dados de Entrada

# Ensolarado, Final de Semana, Parque Lotado. 0 = não, 1 = sim

X = [[0,0,0], [0,1,0], [1,0,0], [1,1,0], [0,0,1], [0,1,1], [1,0,1], [1,1,1]]

# Dados de Saída

# Ir ao parque? 0 = não, 1 = sim

Y = [0, 1, 1, 1, 0, 0, 0, 0]

# Criando e treinando o Perceptron

modelo = Perceptron()
modelo.fit(X, Y)

# Testando o modelo

print("Previsões:")
testes = [[0,0,0], [0,1,0], [1,0,0], [1,1,0], [0,0,1], [0,1,1], [1,0,1], [1,1,1]]
for teste in testes:
  previsao = modelo.predict([teste])
  print (f"Ensolarado: {teste[0]}, Final de Semana: {teste[1]}, Parque Lotado: {teste[2]} => Ir ao Parque? {'Sim' if previsao[0] == 1 else 'Não'}")

# Importando a biblioteca
from sklearn.linear_model import Perceptron

# Dados de Entrada

# Cansado, Ingredientes em casa, Restaurante aberto, Pagamento recente. 0 = não, 1 = sim

X = [[0,1,1,1], [1,0,1,1], [1,0,0,1], [0,0,1,0], [1,1,1,1], [0,1,0,0], [1,0,0,1], [0,0,0,1]]

# Dados de Saída

# Comer fora? 0 = não, 1 = sim

Y = [0,1,0,1,1,0,0,0]

# Criando e treinando o Perceptron

modelo = Perceptron()
modelo.fit(X, Y)

# Testando o modelo

print("Previsões:")
testes = [[0,1,1,1], [1,0,1,1], [1,0,0,1], [0,0,1,0], [1,1,1,1], [0,1,0,0], [1,0,0,1], [0,0,0,1]]
for teste in testes:
  previsao = modelo.predict([teste])
  print (f"Cansado: {teste[0]}, Ingredientes em casa: {teste[1]}, Restaurante aberto: {teste[2]}, Pagamento recente: {teste[3]} => Comer fora? {'Sim' if previsao[0] == 1 else 'Não'}")